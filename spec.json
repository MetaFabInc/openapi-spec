{"openapi":"3.0.0","info":{"title":"MetaFab API","version":"1.2.1","description":" Complete MetaFab API references and guides can be found at: https://trymetafab.com","termsOfService":"https://trymetafab.com","contact":{"name":"MetaFab Team","email":"metafabproject@gmail.com","url":"https://trymetafab.com"}},"servers":[{"description":"MetaFab API Server","url":"https://api.trymetafab.com"}],"components":{"parameters":{"headerGameKey":{"name":"X-Game-Key","in":"header","description":"The `publishedKey` of a specific game. This can be shared or included in game clients, websites, etc.","example":"game_pk_4SOqpDi8pQdnQgfCOBW29qR8YmwOhxVPz5iHoMgUEJLDdPXgwLuHqZf8ewo2GajZ","required":true,"schema":{"type":"string"}},"headerAuthorizationGame":{"name":"X-Authorization","in":"header","description":"The `secretKey` of the authenticating game.","example":"game_sk_02z4Mv3c85Ig0gNowY9Dq0N2kjb1xwzr27ArLE0669RrRI6dLf822iPO26K1p1FP","required":true,"schema":{"type":"string"}},"headerAuthorizationPlayer":{"name":"X-Authorization","in":"header","description":"The `accessToken` of the authenticating player.","example":"player_at_02z4Mv3c85Ig0gNowY9Dq0N2kjb1xwzr27ArLE0669RrRI6dLf822iPO26K1p1FP","required":true,"schema":{"type":"string"}},"headerAuthorizationGameOrPlayer":{"name":"X-Authorization","in":"header","description":"The `secretKey` of a specific game or the `accessToken` of a specific player.","example":["game_sk_02z4Mv3c85Ig0gNowY9Dq0N2kjb1xwzr27ArLE0669RrRI6dLf822iPO26K1p1FP","player_at_02z4Mv3c85Ig0gNowY9Dq0N2kjb1xwzr27ArLE0669RrRI6dLf822iPO26K1p1FP"],"required":true,"schema":{"type":"string"}},"headerPasswordGame":{"name":"X-Password","in":"header","description":"The password of the authenticating game. Required to decrypt and perform blockchain transactions with the game primary wallet.","example":"mySecurePassword","required":true,"schema":{"type":"string"}},"headerPasswordPlayer":{"name":"X-Password","in":"header","description":"The password of the authenticating player. Required to decrypt and perform blockchain transactions with the player primary wallet.","example":"mySecurePassword","required":true,"schema":{"type":"string"}},"headerPasswordGameOrPlayer":{"name":"X-Password","in":"header","description":"The password of the authenticating game or player. Required to decrypt and perform blockchain transactions with the game or player primary wallet.","example":"mySecurePassword","required":true,"schema":{"type":"string"}},"pathCollectionId":{"name":"collectionId","in":"path","description":"Any collection id within the MetaFab ecosystem.","required":true,"schema":{"type":"string"}},"pathCollectionItemId":{"name":"collectionItemId","in":"path","description":"Any item id for the collection. Zero, or a positive integer.","required":true,"schema":{"type":"number"}},"pathContractId":{"name":"contractId","in":"path","description":"Any contract id within the MetaFab ecosystem.","required":true,"schema":{"type":"string"}},"pathCurrencyId":{"name":"currencyId","in":"path","description":"Any currency id within the MetaFab ecosystem.","required":true,"schema":{"type":"string"}},"pathGameId":{"name":"gameId","in":"path","description":"Any game id within the MetaFab ecosystem.","required":true,"schema":{"type":"string"}},"pathShopId":{"name":"shopId","in":"path","description":"Any shop id within the MetaFab ecosystem.","required":true,"schema":{"type":"string"}},"pathShopOfferId":{"name":"shopOfferId","in":"path","description":"Any offer id for the shop. Zero, or a positive integer.","required":true,"schema":{"type":"string"}},"pathLootboxManagerId":{"name":"lootboxManagerId","in":"path","description":"Any lootbox manager id within the MetaFab ecosystem.","required":true,"schema":{"type":"string"}},"pathLootboxManagerLootboxId":{"name":"lootboxManagerLootboxId","in":"path","description":"Any lootbox manager lootbox id within the MetaFab ecosystem.","required":true,"schema":{"type":"string"}},"pathTransactionId":{"name":"transactionId","in":"path","description":"Any transaction id within the MetaFab ecosystem.","required":true,"schema":{"type":"string"}},"pathPlayerId":{"name":"playerId","in":"path","description":"Any player id within the MetaFab ecosystem.","required":true,"schema":{"type":"string"}},"pathWalletId":{"name":"walletId","in":"path","description":"Any wallet id within the MetaFab ecosystem.","required":true,"schema":{"type":"string"}},"queryAddress":{"name":"address","in":"query","description":"A valid EVM based address. For example, `0x39cb70F972E0EE920088AeF97Dbe5c6251a9c25D`.","example":"0x39cb70F972E0EE920088AeF97Dbe5c6251a9c25D","required":false,"schema":{"type":"string"}},"queryArgs":{"name":"args","in":"query","description":"A comma seperated list of basic data type arguments. This is optional and only necessary if the function being invoked requires arguments per the contract ABI. For example, `123,\"Hello\",false`.","example":"123,\"Hello\",false","required":false,"schema":{"type":"string"}},"queryFunc":{"name":"func","in":"query","description":"A contract function name. This can be any valid function from the the ABI of the contract you are interacting with. For example, `balanceOf`.","required":true,"schema":{"type":"string"}},"queryOperatorAddress":{"name":"operatorAddress","in":"query","description":"A valid EVM based address. For example, `0x39cb70F972E0EE920088AeF97Dbe5c6251a9c25D`.","example":"0x39cb70F972E0EE920088AeF97Dbe5c6251a9c25D","required":true,"schema":{"type":"string"}},"queryRole":{"name":"role","in":"query","description":"A valid MetaFab role or bytes string representing a role, such as `0xc9eb32e43bf5ecbceacf00b32281dfc5d6d700a0db676ea26ccf938a385ac3b7`","example":"minter","required":true,"schema":{"type":"string"}},"queryWalletId":{"name":"walletId","in":"query","description":"Any wallet id within the MetaFab ecosystem.","required":false,"schema":{"type":"string"}}},"responses":{"400":{"description":"An API level error occurred. This is often due to problematic data being provided by you.","content":{"application/json":{"schema":{"type":"string"}}}},"401":{"description":"An authorization error occured. This is often due to incorrect tokens or keys being provided, or accessing a resource that the provided tokens or keys do not have access to.","content":{"application/json":{"schema":{"type":"string"}}}}},"schemas":{"GameModel":{"type":"object","properties":{"id":{"type":"string","description":"This field has not had a description added."},"walletId":{"type":"string","description":"This field has not had a description added."},"fundingWalletId":{"type":"string","description":"This field has not had a description added."},"email":{"type":"string","description":"This field has not had a description added."},"name":{"type":"string","description":"This field has not had a description added."},"rpcs":{"type":"object","description":"This field has not had a description added."},"publishedKey":{"type":"string","description":"This field has not had a description added."},"secretKey":{"type":"string","description":"This field has not had a description added."},"verified":{"type":"boolean","description":"This field has not had a description added."},"updatedAt":{"type":"string","description":"This field has not had a description added."},"createdAt":{"type":"string","description":"This field has not had a description added."}}},"PlayerModel":{"type":"object","properties":{"id":{"type":"string","description":"This field has not had a description added."},"gameId":{"type":"string","description":"This field has not had a description added."},"walletId":{"type":"string","description":"This field has not had a description added."},"username":{"type":"string","description":"This field has not had a description added."},"accessToken":{"type":"string","description":"This field has not had a description added."},"updatedAt":{"type":"string","description":"This field has not had a description added."},"createdAt":{"type":"string","description":"This field has not had a description added."}}},"WalletModel":{"type":"object","properties":{"id":{"type":"string","description":"This field has not had a description added."},"address":{"type":"string","description":"This field has not had a description added."}}},"CollectionModel":{"type":"object","properties":{"id":{"type":"string","description":"This field has not had a description added."},"gameId":{"type":"string","description":"This field has not had a description added."},"contractId":{"type":"string","description":"This field has not had a description added."},"updatedAt":{"type":"string","description":"This field has not had a description added."},"createdAt":{"type":"string","description":"This field has not had a description added."}}},"CurrencyModel":{"type":"object","properties":{"id":{"type":"string","description":"This field has not had a description added."},"gameId":{"type":"string","description":"This field has not had a description added."},"contractId":{"type":"string","description":"This field has not had a description added."},"name":{"type":"string","description":"This field has not had a description added."},"symbol":{"type":"string","description":"This field has not had a description added."},"supplyCap":{"type":"integer","description":"This field has not had a description added."},"updatedAt":{"type":"string","description":"This field has not had a description added."},"createdAt":{"type":"string","description":"This field has not had a description added."}}},"ContractModel":{"type":"object","properties":{"id":{"type":"string","description":"This field has not had a description added."},"gameId":{"type":"string","description":"This field has not had a description added."},"chain":{"type":"string","description":"This field has not had a description added."},"abi":{"type":"object","description":"This field has not had a description added."},"type":{"type":"string","description":"This field has not had a description added."},"address":{"type":"string","description":"This field has not had a description added."},"updatedAt":{"type":"string","description":"This field has not had a description added."},"createdAt":{"type":"string","description":"This field has not had a description added."}}},"ShopModel":{"type":"object","properties":{"id":{"type":"string","description":"This field has not had a description added."},"gameId":{"type":"string","description":"This field has not had a description added."},"contractId":{"type":"string","description":"This field has not had a description added."},"updatedAt":{"type":"string","description":"This field has not had a description added."},"createdAt":{"type":"string","description":"This field has not had a description added."}}},"LootboxManagerModel":{"type":"object","properties":{"id":{"type":"string","description":"This field has not had a description added."},"gameId":{"type":"string","description":"This field has not had a description added."},"contractId":{"type":"string","description":"This field has not had a description added."},"updatedAt":{"type":"string","description":"This field has not had a description added."},"createdAt":{"type":"string","description":"This field has not had a description added."}}},"TransactionModel":{"type":"object","properties":{"id":{"type":"string","description":"This field has not had a description added."},"contractId":{"type":"string","description":"This field has not had a description added."},"walletId":{"type":"string","description":"This field has not had a description added."},"function":{"type":"string","description":"This field has not had a description added."},"args":{"type":"object","description":"This field has not had a description added."},"hash":{"type":"string","description":"This field has not had a description added."},"updatedAt":{"type":"string","description":"This field has not had a description added."},"createdAt":{"type":"string","description":"This field has not had a description added."}}},"LootboxManagerLootbox":{"type":"object","properties":{"id":{"type":"integer","description":"The id of this lootbox."},"inputCollection":{"type":"string","description":"The address of the ERC1155 or MetaFab game items contract for input items required by this lootbox."},"inputCollectionItemIds":{"type":"array","description":"An array of item ids from the input collection that are required for this lootbox.","items":{"type":"integer"}},"inputCollectionItemAmounts":{"type":"array","description":"An array of amounts for each item id for the input collection that are required to open this lootbox.","items":{"type":"integer"}},"outputCollection":{"type":"string","description":"The address of the ERC1155 of MetaFab game items contract for possible output items given by this lootbox."},"outputCollectionItemIds":{"type":"array","description":"An array of item ids from the output collection that are possibly given by this lootbox.","items":{"type":"integer"}},"outputCollectionItemAmounts":{"type":"array","description":"An array of amounts for each item id for the output collection that are possibly given by this lootbox.","items":{"type":"integer"}},"outputCollectionItemWeights":{"type":"array","description":"An array of weights for each item id for the output collection that are possibly given by this lootbox.","items":{"type":"integer"}},"outputTotalItems":{"type":"integer","description":"The number of items randomly selected when this lootbox is opened."},"lastUpdatedAt":{"type":"integer","description":"A unix timestamp in seconds that represents the last time this offer was set or updated."}}},"PublicGame":{"type":"object","properties":{"id":{"type":"string","description":"This field has not had a description added."},"name":{"type":"string","description":"This field has not had a description added."},"publishedKey":{"type":"string","description":"This field has not had a description added."},"updatedAt":{"type":"string","description":"This field has not had a description added."},"createdAt":{"type":"string","description":"This field has not had a description added."}}},"PublicPlayer":{"type":"object","properties":{"id":{"type":"string","description":"This field has not had a description added."},"gameId":{"type":"string","description":"This field has not had a description added."},"walletId":{"type":"string","description":"This field has not had a description added."},"username":{"type":"string","description":"This field has not had a description added."},"updatedAt":{"type":"string","description":"This field has not had a description added."},"createdAt":{"type":"string","description":"This field has not had a description added."},"wallet":{"type":"object","properties":{"id":{"type":"string","description":"This field has not had a description added."},"address":{"type":"string","description":"This field has not had a description added."}}}}},"ShopOffer":{"type":"object","properties":{"id":{"type":"integer","description":"The id of this offer."},"inputCollection":{"type":"string","description":"The address of the ERC1155 or MetaFab game items contract for input items required by this offer."},"inputCollectionItemIds":{"type":"array","description":"An array of item ids from the input collection that are required for this offer.","items":{"type":"integer"}},"inputCollectionItemAmounts":{"type":"array","description":"An array of amounts for each item id for the input collection that are required to use this offer.","items":{"type":"integer"}},"inputCurrency":{"type":"string","description":"The address of the ERC20 or MetaFab game currency for the currency required by this offer."},"inputCurrencyAmount":{"type":"number","description":"The amount of currency required by this offer."},"outputCollection":{"type":"string","description":"The address of the ERC1155 or MetaFab game items contract for output items given by this offer."},"outputCollectionItemIds":{"type":"array","description":"An array of item ids from the output collection that are given for this offer.","items":{"type":"integer"}},"outputCollectionItemAmounts":{"type":"array","description":"An array of amounts for each item id for the output collection that are given by this offer.","items":{"type":"integer"}},"outputCurrency":{"type":"string","description":"The address of the ERC20 or MetaFab game currency for the output currency given by this offer."},"outputCurrencyAmount":{"type":"number","description":"The amount of currency given by this offer."},"uses":{"type":"integer","description":"The number of times this offer has been used."},"maxUses":{"type":"integer","description":"The maximum number of times this offer can be used. A value of `0` means there is no limit on how many times this offer can be used."},"lastUpdatedAt":{"type":"integer","description":"A unix timestamp in seconds that represents the last time this offer was set or updated."}}},"AnyValue":{"description":"Can be anything. String, number, object, array, boolean, etc."}},"securitySchemes":{"basicAuth":{"type":"http","scheme":"basic"}}},"tags":[{"name":"Contracts","description":"Contract related operations"},{"name":"Currencies","description":"Currency related operations"},{"name":"Shops","description":"Shop related operations"},{"name":"Games","description":"Game related operations"},{"name":"Items","description":"Item related operations"},{"name":"Transactions","description":"Transaction related operations"},{"name":"Players","description":"Player related operations"},{"name":"Wallets","description":"Wallet related operations"}],"paths":{"/v1/collections":{"get":{"operationId":"getCollections","summary":"Get collections","description":"Returns an array of active item collections for the game associated with the provided `X-Game-Key`.","tags":["Items"],"parameters":[{"$ref":"#/components/parameters/headerGameKey"}],"responses":{"200":{"description":"Successfully retrieved an array of item collections for the game associated with the provided `X-Game-Key`","content":{"application/json":{"schema":{"type":"array","items":{"allOf":[{"$ref":"#/components/schemas/CollectionModel"},{"type":"object","properties":{"contract":{"$ref":"#/components/schemas/ContractModel"}}}]}}}}},"400":{"$ref":"#/components/responses/400"}}},"post":{"operationId":"createCollection","summary":"Create collection","description":"Creates a new game item collection and deploys an extended functionality ERC1155 contract on behalf of the authenticating game's primary wallet. The deployed ERC1155 contract is preconfigured to fully support creating unique item types, item transfer timelocks, custom metadata per item, gasless transactions from player managed wallets, and much more.","tags":["Items"],"parameters":[{"$ref":"#/components/parameters/headerAuthorizationGame"},{"$ref":"#/components/parameters/headerPasswordGame"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"chain":{"type":"string","description":"The blockchain you want to deploy this item collection on. Support for new blockchains are added over time.","example":"SELECT ONE","enum":["ETHEREUM","GOERLI","MATIC","MATICMUMBAI","ARBITRUM","ARBITRUMGOERLI"]}},"required":["chain"]}}}},"responses":{"200":{"description":"Successfully created a new item collection and deployed its associated ERC1155 contract on the chain specified. Returns a collection object containing a contract property with the deployment transaction.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/CollectionModel"},{"type":"object","properties":{"contract":{"allOf":[{"$ref":"#/components/schemas/ContractModel"},{"type":"object","properties":{"transactions":{"type":"array","items":{"$ref":"#/components/schemas/TransactionModel"}}}}]}}}]}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}}},"/v1/collections/{collectionId}/approvals":{"get":{"operationId":"getCollectionApproval","summary":"Get collection approval","description":"Returns a boolean (true/false) representing if the provided operatorAddress has approval to transfer and burn items from the current collection owned by the address or address associated with the provided walletId.","tags":["Items"],"parameters":[{"$ref":"#/components/parameters/pathCollectionId"},{"$ref":"#/components/parameters/queryOperatorAddress"},{"$ref":"#/components/parameters/queryAddress"},{"$ref":"#/components/parameters/queryWalletId"}],"responses":{"200":{"description":"Successfully retrieved the boolean value representing if the provided operatorAddress can transfer and burn owned items by the provided address or walletId.","content":{"application/json":{"schema":{"type":"boolean"}}}},"400":{"$ref":"#/components/responses/400"}}},"post":{"operationId":"setCollectionApproval","summary":"Set collection approval","description":"Sets approval for the provided address or wallet address associated with the provided walletId to operate on behalf of the authenticating game or player's owned items for this collection. Setting an approved value of `true` allows the provided address or address associated with the provided walletId to transfer and burn items from this collection on behalf of the authenticated game or player's wallet address.","tags":["Items"],"parameters":[{"$ref":"#/components/parameters/pathCollectionId"},{"$ref":"#/components/parameters/headerAuthorizationGameOrPlayer"},{"$ref":"#/components/parameters/headerPasswordGameOrPlayer"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"approved":{"type":"boolean","description":"A true or false value approves or disapproves the provided address or address associated with the provided walletId."},"address":{"type":"string","description":"A valid EVM based address to allow control over the authenticating game or player's wallet items for this collection."},"walletId":{"type":"string","description":"A wallet id within the MetaFab ecosystem to allow control over the authenticating game or player's wallet items for this collection.","items":{"type":"string"}}},"required":["approved"]}}}},"responses":{"200":{"description":"Successfully set approval for the provided address or address associated with the provided walletId to transfer and burn items from this collection on behalf of the authenticated game or player's wallet. Returns a transaction object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionModel"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}}},"/v1/collections/{collectionId}/balances":{"get":{"operationId":"getCollectionItemBalances","summary":"Get collection item balances","description":"Returns the current collection item balances of all collection items for the provided wallet address or the wallet address associated with the provided walletId.","tags":["Items"],"parameters":[{"$ref":"#/components/parameters/pathCollectionId"},{"$ref":"#/components/parameters/queryAddress"},{"$ref":"#/components/parameters/queryWalletId"}],"responses":{"200":{"description":"Successfully retrieved currency balances of all collection items owned by the provided address or walletId. Balances are returned as a an object, mapping key value pairs as itemId -> balance (string to handle uint256 numbers).","content":{"application/json":{"schema":{"type":"object","description":"Key value pairs represented as itemId -> balance for the provided wallet or address.","additionalProperties":{"type":"integer"}}}}},"400":{"$ref":"#/components/responses/400"}}}},"/v1/collections/{collectionId}/batchMints":{"post":{"operationId":"batchMintCollectionItems","summary":"Batch mint collection items","description":"Creates (mints) the provided itemIds of the specified quantities to the provided wallet address or wallet address associated with the provided walletId.","tags":["Items"],"parameters":[{"$ref":"#/components/parameters/pathCollectionId"},{"$ref":"#/components/parameters/headerAuthorizationGame"},{"$ref":"#/components/parameters/headerPasswordGame"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"address":{"type":"string","description":"A valid EVM based address to create (mint) the items for. For example, `0x39cb70F972E0EE920088AeF97Dbe5c6251a9c25D`."},"itemIds":{"type":"array","description":"An array of unique itemIds to create (mint).","items":{"type":"integer"}},"quantities":{"type":"array","description":"An array of the quantities of each of the unique itemIds provided to create (mint). The quantity of each itemId in itemIds should be at the same index as the specific itemId in the itemIds array. For example, quantities[2] defines the quantity to mint for itemIds[2], etc.","items":{"type":"integer"}},"walletId":{"type":"string","description":"Any wallet id within the MetaFab ecosystem to create (mint) the items for."}},"required":["itemIds","quantities"]}}}},"responses":{"200":{"description":"Successfully created (minted) the provided items of the provided quantities to the provided wallet address or wallet address of the provided walletId. Returns a transaction object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionModel"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}}},"/v1/collections/{collectionId}/batchTransfers":{"post":{"operationId":"batchTransferCollectionItems","summary":"Batch transfer collection items","description":"Transfers one or multiple items of specified quantities to the provided wallet addresses or wallet addresses associated with the provided walletIds. You may also provide a combination of addresses and walletIds in one request.","tags":["Items"],"parameters":[{"$ref":"#/components/parameters/pathCollectionId"},{"$ref":"#/components/parameters/headerAuthorizationGameOrPlayer"},{"$ref":"#/components/parameters/headerPasswordGameOrPlayer"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"addresses":{"type":"array","description":"An array of valid EVM based addresses to transfer items to.","items":{"type":"string"}},"walletIds":{"type":"array","description":"An array of wallet ids within the MetaFab ecosystem to transfer items to.","items":{"type":"string"}},"itemIds":{"type":"array","description":"An array of unique itemIds to transfer. Each recipient will receive the same set of items provided.","items":{"type":"integer","example":12}},"quantities":{"type":"array","description":"The quantities of each unique itemId to transfer. Each recipient will receive the same quantities of items provided.","items":{"type":"integer","example":1}}},"required":["itemIds","quantities"]}}}},"responses":{"200":{"description":"Successfully transferred the itemIds of the provided quantities to each of the provided wallet addresses and/or wallet addresses of the provided walletIds. Returns a transaction object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionModel"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}}},"/v1/collections/{collectionId}/items":{"get":{"operationId":"getCollectionItems","summary":"Get collection items","description":"Returns all collection items as an array of metadata objects.\n\nPlease note that ONLY items that have had at least 1 quantity minted will be returned. If you've created an item that has not been minted yet, it will not be returned in the array response.","tags":["Items"],"parameters":[{"$ref":"#/components/parameters/pathCollectionId"}],"responses":{"200":{"description":"Successfully retrieved collection items metadata.","content":{"application/json":{"schema":{"type":"array","items":{"type":"object"}}}}},"400":{"$ref":"#/components/responses/400"}}},"post":{"operationId":"createCollectionItem","summary":"Create collection item","description":"Creates a new item type. Item type creation associates all of the relevant item data to a specific itemId. Such as item name, image, description, attributes, any arbitrary data such as 2D or 3D model resolver URLs, and more. It is recommended, but not required, that you create a new item type through this endpoint before minting any quantity of the related itemId.\n\nAny itemId provided will have its existing item type overriden if it already exists.\n\nItem type data is uploaded to, and resolved through IPFS for decentralized persistence.","tags":["Items"],"parameters":[{"$ref":"#/components/parameters/pathCollectionId"},{"$ref":"#/components/parameters/headerAuthorizationGame"},{"$ref":"#/components/parameters/headerPasswordGame"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"integer","description":"A unique itemId to use for this item within the collection. If an existing itemId is used, the current metadata will be overriden. Any number may be used.\n\nThe terms `itemId` and `collectionItemId` are used interchangeably and equivalent to one another throughout MetaFab documentation.","example":1337},"name":{"type":"string","description":"The name of this item.","example":"Fire Dagger"},"description":{"type":"string","description":"A text description of this item. This is a great spot to include lore, game mechanics and more related to this item."},"imageBase64":{"type":"string","format":"byte","description":"A base64 string of the image for this item. Either `imageBase64` or `imageUrl` must be provided. Supported image formats are `jpg`, `jpeg`, `png`, `gif`. Recommended size of 1:1 aspect ratio and no more than 1500x1500 pixels.","example":"iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAIAAAD8GO2jAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAA4RpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuNi1jMTQ1IDc5LjE2MzQ5OSwgMjAxOC8wOC8xMy0xNjo0MDoyMiAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VSZWYjIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDpjMjliZTNkYy03YWU1LTQyNDItYTJkZS1kOTczYmVmNjE5MGYiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6NUQzRkUwRkQwMTRCMTFFQzlCRDhDRkU3MTJBRERFQzYiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6NUQzRkUwRkMwMTRCMTFFQzlCRDhDRkU3MTJBRERFQzYiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENDIDIwMTkgKFdpbmRvd3MpIj4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6YzliNTI0MTgtMjAwZi03OTQ2LTljZGMtNDZkZmY1M2UzNzUxIiBzdFJlZjpkb2N1bWVudElEPSJhZG9iZTpkb2NpZDpwaG90b3Nob3A6OWE1NWVkMGMtNTg2Ny1mODQ5LWI0NDktMzBmM2E0ZDRlODY4Ii8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+AtOGKQAAAhpJREFUeNpidDPWZaAlYKKRufcvX4MwWEjSduHKNQMdLVxmQYCiLooCFuKNBpIQ09FMXDJJ9MqVX+fOvweyX71iuACWhVvDQqTpLc2euybtuwjWfOMO05ltwm+ffbtw/PP5Bwwxea+RQxtotENyzoG5UyBcRoKRDDQ9Nlrt4a6HK4/93jmHE2jo028Mu05DjXv355+xoQ6yemTTifUB0PTkdNEFXZ+B4QA0GmwoNAQUUVWimQ4EzMpS4niM3nX2soiM/J3v/9dufyHM8gNoOjAEpCTFsCoOaZ+0rbuRhGQKNN3e3v7Dh/ev37wBhgPEdFyKgaavqczDFGfBYzo/P/+DBw8/fvwIiSc8pldu3t/u60hCRoO4XUBA8OHDBwRTAR7TsfgAkt7l5RUuXLgAdzvZpqP7AJIi7UTZv339QhXTUSyA5CZIivz37i1B05ecvETQdHQfAPMqMDc9e/k5wpLh7Pkr+E2PMdcjoTSFlGIXX/0E5lVIbkLLn+SZjohkeBkJLAnwp/edZy65m+gRXwAzIZe6wFIMWM4ASwJqmY4eB8AyEk/gAEOGVNPRLQCWwFQJd5wWbN37mbqmo1sArI8wIwCYm8g2HWEBMIaBNd+Fh+gRQExeJdYHwHoVswSm0HQUCyC1NsHynTrtImqZjmIBMIbh9Sq1TEdpawBjGK3FQf2mI9VNh7aL7qO2xagLWGhnNG1b13AAEGAAXoMjTB7v7GQAAAAASUVORK5CYII="},"imageUrl":{"type":"string","format":"uri","description":"An external url that resolves to an image to use for this item. This can also be set to an ipfs:// uri. Recommended size of 1:1 aspect ratio and no more than 1500x1500 pixels.","example":"https://mycdn.mygame.com/example/item1.gif"},"externalUrl":{"type":"string","format":"uri","description":"An optional URL where players can go to learn more about this item specifically, or your game, or any other link."},"attributes":{"type":"array","description":"An array of objects that conform with the [metadata attributes standard that can be found here](https://docs.opensea.io/docs/metadata-standards#attributes)","items":{"type":"object","properties":{"trait_type":{"type":"string","example":"Attack Power"},"value":{"example":100}},"required":["trait_type","value"]}},"data":{"type":"object","description":"An arbitrary object of data attached to the top level metadata object. This is useful for including data or resource URLs specific to your game. Such as URLs that point to 3D models, music files, bitmaps, or anything else you need to reference."}},"required":["id","name","description"]}}}},"responses":{"200":{"description":"Successfully created a new item type and assigned it to the provided item `id`. Returns a transaction object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionModel"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}}},"/v1/collections/{collectionId}/items/{collectionItemId}":{"get":{"operationId":"getCollectionItem","summary":"Get collection item","description":"Returns a metadata object for the provided collectionItemId.","tags":["Items"],"parameters":[{"$ref":"#/components/parameters/pathCollectionId"},{"$ref":"#/components/parameters/pathCollectionItemId"}],"responses":{"200":{"description":"Successfully retrieved collection item metadata.","content":{"application/json":{"schema":{"type":"object"}}}},"400":{"$ref":"#/components/responses/400"}}}},"/v1/collections/{collectionId}/items/{collectionItemId}/balances":{"get":{"operationId":"getCollectionItemBalance","summary":"Get collection item balance","description":"Returns the current collection item balance of the provided collectionItemId for the provided wallet address or the wallet address associated with the provided walletId.","tags":["Items"],"parameters":[{"$ref":"#/components/parameters/pathCollectionId"},{"$ref":"#/components/parameters/pathCollectionItemId"},{"$ref":"#/components/parameters/queryAddress"},{"$ref":"#/components/parameters/queryWalletId"}],"responses":{"200":{"description":"Successfully retrieved collection item balance of the provided collectionItemId for address or walletId. Balance is returned as a string to handle uint256 numbers.","content":{"application/json":{"schema":{"type":"integer"}}}},"400":{"$ref":"#/components/responses/400"}}}},"/v1/collections/{collectionId}/items/{collectionItemId}/burns":{"post":{"operationId":"burnCollectionItem","summary":"Burn collection item","description":"Removes (burns) the provided quantity of the collectionItemId from the authenticating game or players wallet. The quantity is permanently removed from the circulating supply of the item.","tags":["Items"],"parameters":[{"$ref":"#/components/parameters/pathCollectionId"},{"$ref":"#/components/parameters/pathCollectionItemId"},{"$ref":"#/components/parameters/headerAuthorizationGameOrPlayer"},{"$ref":"#/components/parameters/headerPasswordGameOrPlayer"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"quantity":{"type":"integer","description":"The quantity of the collectionItemId to burn."}},"required":["quantity"]}}}},"responses":{"200":{"description":"Successfully removed (burned) the quantity of the collectionItemId from the authenticating game or player's wallet. Returns a transaction object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionModel"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}}},"/v1/collections/{collectionId}/items/{collectionItemId}/mints":{"post":{"operationId":"mintCollectionItem","summary":"Mint collection item","description":"Creates (mints) the specified quantity of the provided collectionItemId to the provided wallet address or wallet address associated with the provided walletId.","tags":["Items"],"parameters":[{"$ref":"#/components/parameters/pathCollectionId"},{"$ref":"#/components/parameters/pathCollectionItemId"},{"$ref":"#/components/parameters/headerAuthorizationGame"},{"$ref":"#/components/parameters/headerPasswordGame"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"address":{"type":"string","description":"A valid EVM based address to create (mint) the item(s) for. For example, `0x39cb70F972E0EE920088AeF97Dbe5c6251a9c25D`."},"quantity":{"type":"integer","description":"The quantity of the specified item id to create (mint)."},"walletId":{"type":"string","description":"Any wallet id within the MetaFab ecosystem to create (mint) the item(s) for."}},"required":["quantity"]}}}},"responses":{"200":{"description":"Successfully created (minted) the item(s) to the provided wallet address or wallet address of the provided walletId. Returns a transaction object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionModel"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}}},"/v1/collections/{collectionId}/items/{collectionItemId}/supplies":{"get":{"operationId":"getCollectionItemSupply","summary":"Get collection item supply","description":"Returns the current circulating supply of the provided collectionItemId.","tags":["Items"],"parameters":[{"$ref":"#/components/parameters/pathCollectionId"},{"$ref":"#/components/parameters/pathCollectionItemId"},{"$ref":"#/components/parameters/queryAddress"},{"$ref":"#/components/parameters/queryWalletId"}],"responses":{"200":{"description":"Successfully retrieved collection item supply. Supply is returned as a string to handle uint256 numbers.","content":{"application/json":{"schema":{"type":"integer"}}}},"400":{"$ref":"#/components/responses/400"}}}},"/v1/collections/{collectionId}/items/{collectionItemId}/timelocks":{"get":{"operationId":"getCollectionItemTimelock","summary":"Get collection item timelock","description":"Returns a timestamp (in seconds) for when the provided collectionItemId's transfer timelock expires. A value of 0 means the provided collectionItemId does not have a timelock set. Timelocks prevent items of a specific collectionItemId from being transferred until the set timelock timestamp has been surpassed.","tags":["Items"],"parameters":[{"$ref":"#/components/parameters/pathCollectionId"},{"$ref":"#/components/parameters/pathCollectionItemId"}],"responses":{"200":{"description":"Successfully retrieved the collectionItemId's timelock. The timelock is returned as a unix timestamp in seconds. A return value of 0 means the collectionItemId does not have a timelock set.","content":{"application/json":{"schema":{"type":"integer"}}}},"400":{"$ref":"#/components/responses/400"}}},"post":{"operationId":"setCollectionItemTimelock","summary":"Set collection item timelock","description":"Sets the item timelock for the provided collection itemId. The timelock is a unix timestamp (in seconds) that defines a period in time of when an item may be transferred by players. Until the timelock timestamp has passed, the itemId for the given timelock may not be transferred, sold, traded, etc. A timelock of 0 (default) means that there is no timelock set on the itemId and it can be freely transferred, traded, etc.","tags":["Items"],"parameters":[{"$ref":"#/components/parameters/pathCollectionId"},{"$ref":"#/components/parameters/pathCollectionItemId"},{"$ref":"#/components/parameters/headerAuthorizationGame"},{"$ref":"#/components/parameters/headerPasswordGame"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"timelock":{"type":"integer","description":"A unix timestamp (in seconds) defining when the set timelock expires.","example":1665786026}},"required":["timelock"]}}}},"responses":{"200":{"description":"Successfully set the provided timelock for the provided itemId. Returns a transaction object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionModel"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}}},"/v1/collections/{collectionId}/items/{collectionItemId}/transfers":{"post":{"operationId":"transferCollectionItem","summary":"Transfer collection item","description":"Transfers specified quantity of itemId to the provided wallet address or wallet address associated with the provided walletId.","tags":["Items"],"parameters":[{"$ref":"#/components/parameters/pathCollectionId"},{"$ref":"#/components/parameters/pathCollectionItemId"},{"$ref":"#/components/parameters/headerAuthorizationGameOrPlayer"},{"$ref":"#/components/parameters/headerPasswordGameOrPlayer"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"address":{"type":"string","description":"A valid EVM based addresses to transfer items to."},"walletId":{"type":"string","description":"A wallet id within the MetaFab ecosystem to transfer items to.","items":{"type":"string"}},"quantity":{"type":"integer","description":"The quantity of the collectionItemId to transfer."}},"required":["quantity"]}}}},"responses":{"200":{"description":"Successfully transferred the provided quantity of the collectionItemId to the provided wallet address or wallet address of the provided walletId. Returns a transaction object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionModel"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}}},"/v1/collections/{collectionId}/roles":{"get":{"operationId":"getCollectionRole","summary":"Get collection role","description":"Returns a boolean (true/false) representing if the provided role for this collection has been granted to the provided address or address associated with the provided walletId.","tags":["Items"],"parameters":[{"$ref":"#/components/parameters/pathCollectionId"},{"$ref":"#/components/parameters/queryRole"},{"$ref":"#/components/parameters/queryAddress"},{"$ref":"#/components/parameters/queryWalletId"}],"responses":{"200":{"description":"Successfully retrieved the boolean value representing if the provided role has been granted to the provided address or walletId.","content":{"application/json":{"schema":{"type":"boolean"}}}},"400":{"$ref":"#/components/responses/400"}}},"post":{"operationId":"grantCollectionRole","summary":"Grant collection role","description":"Grants the provided role for the collection to the provided address or address associated with the provided walletId. Granted roles give different types of authority on behalf of the collection for specific players, addresses, or contracts to perform different types of permissioned collection operations.","tags":["Items"],"parameters":[{"$ref":"#/components/parameters/pathCollectionId"},{"$ref":"#/components/parameters/headerAuthorizationGameOrPlayer"},{"$ref":"#/components/parameters/headerPasswordGameOrPlayer"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"role":{"type":"string","description":"A valid MetaFab role or bytes string representing a role, such as `minter` or `0xc9eb32e43bf5ecbceacf00b32281dfc5d6d700a0db676ea26ccf938a385ac3b7`"},"address":{"type":"string","description":"A valid EVM based address grant the role to."},"walletId":{"type":"string","description":"A wallet id within the MetaFab ecosystem to grant the role to.","items":{"type":"string"}}},"required":["role"]}}}},"responses":{"200":{"description":"Successfully granted the provided role to the provided address or address associated with the provided walletId.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionModel"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}},"delete":{"operationId":"revokeCollectionRole","summary":"Revoke collection role","description":"Revokes the provided role for the collection to the provided address or address associated with the provided walletId.","tags":["Items"],"parameters":[{"$ref":"#/components/parameters/pathCollectionId"},{"$ref":"#/components/parameters/headerAuthorizationGameOrPlayer"},{"$ref":"#/components/parameters/headerPasswordGameOrPlayer"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"role":{"type":"string","description":"A valid MetaFab role or bytes string representing a role, such as `minter` or `0xc9eb32e43bf5ecbceacf00b32281dfc5d6d700a0db676ea26ccf938a385ac3b7`"},"address":{"type":"string","description":"A valid EVM based address to revoke the role from."},"walletId":{"type":"string","description":"A wallet id within the MetaFab ecosystem to revoke the role from.","items":{"type":"string"}}},"required":["role"]}}}},"responses":{"200":{"description":"Successfully revoked the provided role from the provided address or address associated with the provided walletId. Returns a transaction object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionModel"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}}},"/v1/collections/{collectionId}/supplies":{"get":{"operationId":"getCollectionItemSupplies","summary":"Get collection item supplies","description":"Returns the currency circulating supply of all collection items.","tags":["Items"],"parameters":[{"$ref":"#/components/parameters/pathCollectionId"}],"responses":{"200":{"description":"Successfully retrieved the circulating supply of all collection items. Supplies are returned as a an object, mapping key value pairs as itemId -> balance (string to handle uint256 numbers).","content":{"application/json":{"schema":{"type":"object","description":"Key value pairs represented as itemId -> circulating supply.","additionalProperties":{"type":"integer"}}}}},"400":{"$ref":"#/components/responses/400"}}}},"/v1/contracts":{"get":{"operationId":"getContracts","summary":"Get contracts","description":"Returns an array of active contracts deployed by the game associated with the provided `X-Game-Key`.","tags":["Contracts"],"parameters":[{"$ref":"#/components/parameters/headerGameKey"}],"responses":{"200":{"description":"Successfully retrieved an array of contracts for the game associated with the provided `X-Game-Key`.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ContractModel"}}}}},"400":{"$ref":"#/components/responses/400"}}},"post":{"operationId":"createContract","summary":"Create custom contract","description":"Create a MetaFab custom contract entry from an existing contract address and contract abi. This allows the game and players belonging to the authenticated game to interact with the contract's read and write functions through MetaFab's read and write contract endpoints.","tags":["Contracts"],"parameters":[{"$ref":"#/components/parameters/headerAuthorizationGame"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"address":{"type":"string","description":"The address of the existing contract."},"abi":{"type":"string","description":"JSON of the abi."},"chain":{"type":"string","description":"The blockchain you want to deploy this currency on. Support for new blockchains are added over time.","example":"SELECT ONE","enum":["ETHEREUM","GOERLI","MATIC","MATICMUMBAI","ARBITRUM","ARBITRUMGOERLI"]}},"required":["address","abi","chain"]}}}},"responses":{"200":{"description":"Successfully created a MetaFab contract entry. Returns a contract object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContractModel"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}}},"/v1/contracts/{contractId}/reads":{"get":{"operationId":"readContract","summary":"Read contract data","description":"Oftentimes you'll want to query and retrieve some data from a contract. This is incredibly easy to do for any contract deployed through MetaFab.\n\nUsing this endpoint, you can get the data returned by any readable function listed in a contracts ABI. This could be things like querying the totalSupply of a currency contract, the number of owners of an items contract, and more.","tags":["Contracts"],"parameters":[{"$ref":"#/components/parameters/pathContractId"},{"$ref":"#/components/parameters/queryFunc"},{"$ref":"#/components/parameters/queryArgs"}],"responses":{"200":{"description":"Successfully retrieved value returned by contract function.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AnyValue"}}}},"400":{"$ref":"#/components/responses/400"}}}},"/v1/contracts/{contractId}/writes":{"post":{"operationId":"writeContract","summary":"Write contract data","description":"MetaFab's convenience endpoints for contract interactions may not be flexible enough depending on your use case. For these situations, you can interact with contracts and create transactions directly.\n\nUsing this endpoint, you can execute a transaction for any writeable contract method as defined in the contract's ABI for the MetaFab contractId provided. Both Games and Player resources have authority to use this endpoint to execute transactions against any valid MetaFab contractId.\n\nAdditionally, MetaFab will automatically attempt to perform a gasless transaction for players interacting with a contract through this endpoint. Gasless transactions by players through this endpoint will only work if the target contract was deployed through MetaFab or supports MetaFab's ERC2771 trusted forwarder contract.","tags":["Contracts"],"parameters":[{"$ref":"#/components/parameters/pathContractId"},{"$ref":"#/components/parameters/headerAuthorizationGameOrPlayer"},{"$ref":"#/components/parameters/headerPasswordGameOrPlayer"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"func":{"type":"string","description":"A contract function name. This can be any valid function from the the ABI of the contract you are interacting with. For example, `mint`."},"args":{"type":"array","description":"An array of args. This is optional and only necessary if the function being invoked requires arguments per the contract ABI. For example, `[123, \"Hello\", false]`.","items":{"anyOf":[{"type":"string"},{"type":"number"},{"type":"boolean"}]}}},"required":["func"]}}}},"responses":{"200":{"description":"Successfully executed and confirmed the transaction. Returns a transaction object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionModel"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}}},"/v1/currencies":{"get":{"operationId":"getCurrencies","summary":"Get currencies","description":"Returns an array of active currencies for the game associated with the provided `X-Game-Key`.","tags":["Currencies"],"parameters":[{"$ref":"#/components/parameters/headerGameKey"}],"responses":{"200":{"description":"Successfully retrieved an array of currencies for the game associated with the provided `X-Game-Key`","content":{"application/json":{"schema":{"type":"array","items":{"allOf":[{"$ref":"#/components/schemas/CurrencyModel"},{"type":"object","properties":{"contract":{"$ref":"#/components/schemas/ContractModel"}}}]}}}}},"400":{"$ref":"#/components/responses/400"}}},"post":{"operationId":"createCurrency","summary":"Create currency","description":"Creates a new game currency and deploys an ERC20 token contract on behalf of the authenticating game's primary wallet. The deployed ERC20 contract is preconfigured to fully support bridging across blockchains, batched transfers and gasless transactions on any supported blockchain as well as full support for gasless transactions from player managed wallets.","tags":["Currencies"],"parameters":[{"$ref":"#/components/parameters/headerAuthorizationGame"},{"$ref":"#/components/parameters/headerPasswordGame"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"The name of this currency. This can be anything, such as `Bright Gems`, `Gold`, etc.","example":"Bright Gems"},"symbol":{"type":"string","description":"The shorthand symbol to represent this currency. This can be anything, such as `BGEM`, `GLD`, etc.","example":"BGEM"},"supplyCap":{"type":"number","description":"The maximum amount of this currency that can ever exist. Use `0` if you do not want this currency to have a maximum supply.","example":15000.5},"chain":{"type":"string","description":"The blockchain you want to deploy this currency on. Support for new blockchains are added over time.","example":"SELECT ONE","enum":["ETHEREUM","GOERLI","MATIC","MATICMUMBAI","ARBITRUM","ARBITRUMGOERLI"]}},"required":["name","symbol","supplyCap","chain"]}}}},"responses":{"200":{"description":"Successfully created a new currency and deployed its associated ERC20 token contract on the chain specified. Returns a currency object containing a contract property with the deployment transaction.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/CurrencyModel"},{"type":"object","properties":{"contract":{"allOf":[{"$ref":"#/components/schemas/ContractModel"},{"type":"object","properties":{"transactions":{"type":"array","items":{"$ref":"#/components/schemas/TransactionModel"}}}}]}}}]}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}}},"/v1/currencies/{currencyId}/balances":{"get":{"operationId":"getCurrencyBalance","summary":"Get currency balance","description":"Returns the current currency balance of the provided wallet address or or the wallet address associated with the provided walletId.","tags":["Currencies"],"parameters":[{"$ref":"#/components/parameters/pathCurrencyId"},{"$ref":"#/components/parameters/queryAddress"},{"$ref":"#/components/parameters/queryWalletId"}],"responses":{"200":{"description":"Successfully retrieved currency balance for the provided address or walletId. Balance is returned as a string to handle uint256 numbers.","content":{"application/json":{"schema":{"type":"number"}}}},"400":{"$ref":"#/components/responses/400"}}}},"/v1/currencies/{currencyId}/batchTransfers":{"post":{"operationId":"batchTransferCurrency","summary":"Batch transfer currency","description":"Transfers multiple amounts of currency to multiple provided wallet addresses or wallet addresses associated with the provided walletIds. You may also provide a combination of addresses and walletIds in one request, the proper receipients will be automatically determined, with `addresses` getting `amounts` order priority first.\n\nOptional references may be included for the transfer. References are useful for identifying transfers intended to pay for items, trades, services and more.","tags":["Currencies"],"parameters":[{"$ref":"#/components/parameters/pathCurrencyId"},{"$ref":"#/components/parameters/headerAuthorizationGameOrPlayer"},{"$ref":"#/components/parameters/headerPasswordGameOrPlayer"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"addresses":{"type":"array","description":"An array of valid EVM based addresses to transfer currency to.","items":{"type":"string"}},"walletIds":{"type":"array","description":"An array of wallet ids within the MetaFab ecosystem to transfer currency to.","items":{"type":"string"}},"amounts":{"type":"array","description":"An array of currency amounts to transfer. Ordering corresponds to the ordering of provided `addresses` and/or `walletIds`. If both `addresses` and `walletIds` are provided, `addresses` are first in the order.","items":{"type":"number","example":10}},"references":{"type":"array","description":"An optional array of uint256 numbers to reference each transfer in the batch. Ordering corresponds to the ordering of provided `addresses` or `walletIds`. If both `addresses` and `walletIds` are provided, `addresses` are first in the order.","items":{"type":"number"}}},"required":["amounts"]}}}},"responses":{"200":{"description":"Successfully transferred the currency amounts to the provided wallet addresses and/or wallet addresses of the provided walletIds. Returns a transaction object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionModel"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}}},"/v1/currencies/{currencyId}/burns":{"post":{"operationId":"burnCurrency","summary":"Burn currency","description":"Removes (burns) the provided amount of currency from the authenticating game or players wallet. The currency amount is permanently removed from the circulating supply of the currency.","tags":["Currencies"],"parameters":[{"$ref":"#/components/parameters/pathCurrencyId"},{"$ref":"#/components/parameters/headerAuthorizationGameOrPlayer"},{"$ref":"#/components/parameters/headerPasswordGameOrPlayer"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"amount":{"type":"number","description":"The amount of currency to remove (burn). The currency balance of the authenticating game or player's wallet must be equal to or greater than this amount.","example":133.7}},"required":["amount"]}}}},"responses":{"200":{"description":"Successfully removed (burned) the currency amount from the authenticating game or player's wallet. Returns a transaction object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionModel"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}}},"/v1/currencies/{currencyId}/fees":{"get":{"operationId":"getCurrencyFees","summary":"Get currency fees","description":"Returns the current fee recipient address and fees of the currency for the provided currencyId. Fees are only applicable for gasless transactions performed by default by players.","tags":["Currencies"],"parameters":[{"$ref":"#/components/parameters/pathCurrencyId"}],"responses":{"200":{"description":"Successfully retrieved currency fees for the currency of the provided currencyId.","content":{"application/json":{"schema":{"type":"object","properties":{"recipientAddress":{"description":"The wallet address that fees from all applicable transactions are automatically sent to.","type":"string"},"basisPoints":{"description":"The number of fee basis points. 100 basisPoints = 1% fee of the total transaction amount deducted from the total received by the recipient.","type":"number"},"fixedAmount":{"description":"The fixed number of currency as a fee regardless of the total transaction amount. 10 = 10 of the currency as a fee for any transaction, deducted from the total received by the recipient.","type":"number"},"capAmount":{"description":"The maximum combined fee between basisPoints and fixedAmount. If the total transaction fee is over this amount, the capAmount will be used as the transaction fee deducted from the total received by the recipient.","type":"number"}}}}}},"400":{"$ref":"#/components/responses/400"}}},"post":{"operationId":"setCurrencyFees","summary":"Set currency fees","description":"Sets the recipient address, basis points, fixed amount and cap amount for a currency's fees.","tags":["Currencies"],"parameters":[{"$ref":"#/components/parameters/pathCurrencyId"},{"$ref":"#/components/parameters/headerAuthorizationGame"},{"$ref":"#/components/parameters/headerPasswordGame"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"recipientAddress":{"type":"string","description":"The recipient address of currency transaction fees."},"basisPoints":{"type":"number","description":"A percentage fee for every transaction represented in basis points. To set a 1.5% fee, you would use a value of 150. This value can be 0, denoting no percentage fees."},"fixedAmount":{"type":"number","description":"A fixed fee for every transaction. A value of 0.5 would mean 0.5 of the currency of a transaction is always taken as a fee. This value can be 0, denoting no fixed fees."},"capAmount":{"type":"number","description":"The maximum fee amount for any single transaction. The total fee of a transaction is calculated as the sum of the basis points (percentage) fee, and fixed fee. If a calculated fee is greater than this maximum fee value, the maximum fee will be used instead."}},"required":["recipientAddress","basisPoints","fixedAmount","capAmount"]}}}},"responses":{"200":{"description":"Successfuly set the currency's fees. Returns a transaction object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionModel"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}}},"/v1/currencies/{currencyId}/mints":{"post":{"operationId":"mintCurrency","summary":"Mint currency","description":"Creates (mints) the provided amount of currency to the provided wallet address or wallet address associated with the provided walletId.","tags":["Currencies"],"parameters":[{"$ref":"#/components/parameters/pathCurrencyId"},{"$ref":"#/components/parameters/headerAuthorizationGame"},{"$ref":"#/components/parameters/headerPasswordGame"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"amount":{"type":"number","description":"The amount of currency to create (mint).","example":133.7},"address":{"type":"string","description":"A valid EVM based address to create (mint) currency for. For example, `0x39cb70F972E0EE920088AeF97Dbe5c6251a9c25D`."},"walletId":{"type":"string","description":"Any wallet id within the MetaFab ecosystem to create (mint) currency for."}},"required":["amount"]}}}},"responses":{"200":{"description":"Successfully created (minted) the currency amount to the provided wallet address or wallet address of the provided walletId. Returns a transaction object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionModel"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}}},"/v1/currencies/{currencyId}/roles":{"get":{"operationId":"getCurrencyRole","summary":"Get currency role","description":"Returns a boolean (true/false) representing if the provided role for this currency has been granted to the provided address or address associated with the provided walletId.","tags":["Currencies"],"parameters":[{"$ref":"#/components/parameters/pathCurrencyId"},{"$ref":"#/components/parameters/queryRole"},{"$ref":"#/components/parameters/queryAddress"},{"$ref":"#/components/parameters/queryWalletId"}],"responses":{"200":{"description":"Successfully retrieved the boolean value representing if the provided role has been granted to the provided address or walletId.","content":{"application/json":{"schema":{"type":"boolean"}}}},"400":{"$ref":"#/components/responses/400"}}},"post":{"operationId":"grantCurrencyRole","summary":"Grant currency role","description":"Grants the provided role for the currency to the provided address or address associated with the provided walletId. Granted roles give different types of authority on behalf of the currency for specific players, addresses, or contracts to perform different types of permissioned currency operations.","tags":["Currencies"],"parameters":[{"$ref":"#/components/parameters/pathCurrencyId"},{"$ref":"#/components/parameters/headerAuthorizationGameOrPlayer"},{"$ref":"#/components/parameters/headerPasswordGameOrPlayer"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"role":{"type":"string","description":"A valid MetaFab role or bytes string representing a role, such as `minter` or `0xc9eb32e43bf5ecbceacf00b32281dfc5d6d700a0db676ea26ccf938a385ac3b7`"},"address":{"type":"string","description":"A valid EVM based address to grant the role to."},"walletId":{"type":"string","description":"A wallet id within the MetaFab ecosystem to grant the role to."}},"required":["role"]}}}},"responses":{"200":{"description":"Successfully granted the provided role to the provided address or address associated with the provided walletId.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionModel"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}},"delete":{"operationId":"revokeCurrencyRole","summary":"Revoke currency role","description":"Revokes the provided role for the currency to the provided address or address associated with the provided walletId.","tags":["Currencies"],"parameters":[{"$ref":"#/components/parameters/pathCurrencyId"},{"$ref":"#/components/parameters/headerAuthorizationGameOrPlayer"},{"$ref":"#/components/parameters/headerPasswordGameOrPlayer"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"role":{"type":"string","description":"A valid MetaFab role or bytes string representing a role, such as `minter` or `0xc9eb32e43bf5ecbceacf00b32281dfc5d6d700a0db676ea26ccf938a385ac3b7`"},"address":{"type":"string","description":"A valid EVM based address to revoke the role from."},"walletId":{"type":"string","description":"A wallet id within the MetaFab ecosystem to revoke the role from.","items":{"type":"string"}}},"required":["role"]}}}},"responses":{"200":{"description":"Successfully revoked the provided role from the provided address or address associated with the provided walletId. Returns a transaction object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionModel"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}}},"/v1/currencies/{currencyId}/transfers":{"post":{"operationId":"transferCurrency","summary":"Transfer currency","description":"Transfers an amount of currency to the provided wallet address or wallet address associated with the provided walletId. If you want to transfer to multiple wallets with different amounts and optional references in one API request, please see the Batch transfer currency documentation.\n\nAn optional reference may be included for the transfer. References are useful for identifying transfers intended to pay for items, trades, services and more.","tags":["Currencies"],"parameters":[{"$ref":"#/components/parameters/pathCurrencyId"},{"$ref":"#/components/parameters/headerAuthorizationGameOrPlayer"},{"$ref":"#/components/parameters/headerPasswordGameOrPlayer"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"address":{"type":"string","description":"A valid EVM based address to transfer currency to. For example, `0x39cb70F972E0EE920088AeF97Dbe5c6251a9c25D`."},"walletId":{"type":"string","description":"Any wallet id within the MetaFab ecosystem to transfer currency to."},"amount":{"type":"number","description":"The amount of currency to transfer.","example":133.7},"reference":{"type":"number","description":"An optional uint256 number to reference the transfer. Commonly used to identify transfers intended to pay for game items or services.","example":1242}},"required":["amount"]}}}},"responses":{"200":{"description":"Successfully transferred the currency amount to the provided wallet address or wallet address of the provided wallet Id. Returns a transaction object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionModel"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}}},"/v1/games/auth":{"get":{"operationId":"authGame","summary":"Authenticate game","description":"Returns an existing game object containing authorization keys and credentials when provided a valid email (in place of username) and password login using Basic Auth.","tags":["Games"],"security":[{"basicAuth":[]}],"responses":{"200":{"description":"Succesfully authorized the request and retrieved a game object containing authorization keys and credentials.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/GameModel"},{"type":"object","properties":{"wallet":{"$ref":"#/components/schemas/WalletModel"}}},{"type":"object","properties":{"fundingWallet":{"$ref":"#/components/schemas/WalletModel"}}}]}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}}},"/v1/games/{gameId}":{"get":{"operationId":"getGame","summary":"Get game","description":"Returns a game object for the provided game id.","tags":["Games"],"parameters":[{"$ref":"#/components/parameters/pathGameId"}],"responses":{"200":{"description":"Successfully retrieved game.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PublicGame"}}}},"400":{"$ref":"#/components/responses/400"}}},"patch":{"operationId":"updateGame","summary":"Update game","description":"Update various fields specific to a game. Such as changing its password, resetting its published or secret key, or updating its RPCs.","tags":["Games"],"parameters":[{"$ref":"#/components/parameters/pathGameId"},{"$ref":"#/components/parameters/headerAuthorizationGame"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"A new name. Replaces the game's current name."},"email":{"type":"string","description":"A new email address. The game's old email will no longer be valid for account authentication. `currentPassword` must also be provided.","format":"email"},"currentPassword":{"type":"string","description":"The game's current password. Must be provided if setting `newPassword` or `email`.","format":"password"},"newPassword":{"type":"string","description":"A new password. The game's old password will no longer be valid.","format":"password"},"rpcs":{"type":"object","description":"Sets a custom RPC for your game to use instead of MetaFab's default RPCs for the chain(s) you specify.\n\nExpects a JSON object containing key value pairs of supported `chain` -> `rpc url`. Only the chain names provided as keys in the object will be explicitly overriden. To delete a custom RPC for your game, provide the chain name to delete as a key in the provided object and `null` as the value.\n\nSet RPC example, `{ MATIC: 'https://polygon-rpc.com' }`\nDelete RPC example, `{ MATIC: null }`","additionalProperties":{"type":"string"},"example":"https://polygon-rpc.com"},"resetPublishedKey":{"type":"boolean","description":"Revokes the game's previous published key and returns a new one if true."},"resetSecretKey":{"type":"boolean","description":"Revokes the game's previous secret key and returns a new on if true."}}}}}},"responses":{"200":{"description":"Returns the updated game object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GameModel"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}}},"/v1/games":{"post":{"operationId":"createGame","summary":"Create game","description":"Create a new game. A game is the root entity required for all API interactions. Contracts, currencies, items and more are deployed by games, player accounts are created and registered to games, etc.\n\nTo use any of MetaFab's services, you must first create a game through this endpoint.\n\nAfter creating your game through this endpoint, a verification email will be sent to the email address used. Before you can access any of MetaFab's features, you'll need to click the link contained in the verification email to verify your account.","tags":["Games"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"The name of the game you're creating.","example":"NFT Worlds"},"email":{"type":"string","description":"The email address associated with this game and used to login/authenticate as the game.","format":"email","example":"dev@nftworlds.com"},"password":{"type":"string","description":"The password to authenticate as the game. Additionally, this password is used to encrypt/decrypt your game's primary wallet and must be provided anytime this game makes blockchain interactions through various endpoints.","format":"password","example":"aReallyStrongPassword123!"}},"required":["name","email","password"]}}}},"responses":{"200":{"description":"Successfully created a new game. Returns a game object containing a wallet and fundingWallet property, respectively representing the games primary wallet address (used to deploy & interact with contract) and funding wallet address (used to cover gasless transaction fees).","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/GameModel"},{"type":"object","properties":{"wallet":{"$ref":"#/components/schemas/WalletModel"}}},{"type":"object","properties":{"fundingWallet":{"$ref":"#/components/schemas/WalletModel"}}}]}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}}},"/v1/lootboxManagers":{"get":{"operationId":"getLootboxManagers","summary":"Get lootbox managers","description":"Returns an array of active lootbox managers for the game associated with the provided `X-Game-Key`.","tags":["Lootboxes"],"parameters":[{"$ref":"#/components/parameters/headerGameKey"}],"responses":{"200":{"description":"Successfully retrieved an array of lootbox managers for the game associated with the provided `X-Game-Key`","content":{"application/json":{"schema":{"type":"array","items":{"allOf":[{"$ref":"#/components/schemas/LootboxManagerModel"},{"type":"object","properties":{"contract":{"$ref":"#/components/schemas/ContractModel"}}}]}}}}},"400":{"$ref":"#/components/responses/400"}}},"post":{"operationId":"createLootboxManager","summary":"Create lootbox manager","description":"Creates a new game lootbox manager and deploys a lootbox manager contract on behalf of the authenticating game's primary wallet. The deployed lootbox manager contract allows you to create lootbox behavior for existing items. For example, you can define item id(s) from one of your item collections as the requirement(s) to open a \"lootbox\". The required item(s) would be burned from the interacting player's wallet and the player would receive item(s) from a weighted randomized set of possible items the lootbox can contain.","tags":["Lootboxes"],"parameters":[{"$ref":"#/components/parameters/headerAuthorizationGame"},{"$ref":"#/components/parameters/headerPasswordGame"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"chain":{"type":"string","description":"The blockchain you want to deploy this lootbox manager on. Support for new blockchains are added over time.","example":"SELECT ONE","enum":["ETHEREUM","GOERLI","MATIC","MATICMUMBAI","ARBITRUM","ARBITRUMGOERLI"]}},"required":["chain"]}}}},"responses":{"200":{"description":"Successfully created a new lootbox manager and deployed its contract on the chain specified. Returns a lootbox manager object containing a contract property with the deployment transaction.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/LootboxManagerModel"},{"type":"object","properties":{"contract":{"allOf":[{"$ref":"#/components/schemas/ContractModel"},{"type":"object","properties":{"transactions":{"type":"array","items":{"$ref":"#/components/schemas/TransactionModel"}}}}]}}}]}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}}},"/v1/lootboxManagers/{lootboxManagerId}/lootboxes":{"get":{"operationId":"getLootboxManagerLootboxes","summary":"Get lootbox manager lootboxes","description":"Returns all lootbox manager lootboxes as an array of lootbox objects.","tags":["Lootboxes"],"parameters":[{"$ref":"#/components/parameters/pathLootboxManagerId"}],"responses":{"200":{"description":"Successfully retrieved lootbox manager lootboxes.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/LootboxManagerLootbox"}}}}},"400":{"$ref":"#/components/responses/400"}}},"post":{"operationId":"setLootboxManagerLootbox","summary":"Set lootbox manager lootbox","description":"Sets a new lootbox manager lootbox or updates an existing one for the provided id. Lootboxes allow item(s) to be burned to receive a random set of possible item(s) based on probability weight.\n\nLootboxes can require any number of unique types of items and quantities to open a created lootbox type within the system. A common pattern with lootboxes is to create a lootbox item type within an item collection, and require it as the input item type.","tags":["Lootboxes"],"parameters":[{"$ref":"#/components/parameters/pathLootboxManagerId"},{"$ref":"#/components/parameters/headerAuthorizationGame"},{"$ref":"#/components/parameters/headerPasswordGame"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"integer","description":"A unique lootbox id to use for this lootbox for the lootbox manager. If an existing lootbox id is used, the current lootbox will be updated but the existing number of opens will be kept. If you want to reset the number of opens for an existing lootbox, first remove it using the remove lootbox endpoint, then set it.","example":1337},"inputCollectionAddress":{"type":"string","description":"A valid EVM based ERC1155 or MetaFab game items contract address that represents the collection for input items required by this lootbox. `inputCollectionAddress` or `inputCollectionId` can optionally be provided."},"inputCollectionId":{"type":"string","description":"A valid MetaFab collection id that represents the collection for input items required by this lootbox. `inputCollectionAddress` or `inputCollectionId` can optionally be provided."},"inputCollectionItemIds":{"type":"array","description":"An array of item ids from the provided input collection that are required to open this lootbox. Input items are burn upon opening a lootbox.","items":{"type":"integer"}},"inputCollectionItemAmounts":{"type":"array","description":"An array of amounts for each item id from the provided input collection that are required to open this lootbox. Item amounts array indices are reflective of the amount required for a given item id at the same index.","items":{"type":"integer"}},"outputCollectionAddress":{"type":"string","description":"A valid EVM based ERC1155 or MetaFab game items contract address that represents the collection for possible output items given by this lootbox. `outputCollectionAddress` or `outputCollectionId` can optionally be provided."},"outputCollectionId":{"type":"string","description":"A valid MetaFab collection id that represents the collection for possible output items given by this lootbox. `outputCollectionAddress` or `outputCollectionId` can optionally be provided."},"outputCollectionItemIds":{"type":"array","description":"An array of item ids from the provided output collection that are possibly given by this lootbox. Randomly selected output items are automatically minted if the lootbox manager contract has the `minter` role for the output collection contract. Otherwise, they are transferred from the item balance held by the lootbox manager contract.","items":{"type":"integer"}},"outputCollectionItemAmounts":{"type":"array","description":"An array of amounts for each item id that can be randomly selected from the provided output collection that are given by this lootbox. Item amounts array indices are reflective of the amount required for a given item id at the same index.","items":{"type":"integer"}},"outputCollectionItemWeights":{"type":"array","description":"An array of weights for each item id that can be randomly selected from the provided output collection that are given by this lootbox. Any positive integer for an item's weight can be provided. The weight for an item relative to the sum of all possible item weights determines the probability that an item will be picked upon a lootbox being opened. Item weights array indices are reflective of the probability weight for a given item id at the same index.","items":{"type":"integer"}},"outputTotalItems":{"type":"integer","description":"The number of items randomly selected from the possible output items when this lootbox is open. If you provide a value greater than 1, it is possible for the same item to be selected more than once, giving the opener more than one of that item's output from the lootbox."}},"required":["id"]}}}},"responses":{"200":{"description":"Successfully created or updated an lootbox manager lootbox for the provided lootbox id. Returns a transaction object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionModel"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}}},"/v1/lootboxManagers/{lootboxManagerId}/lootboxes/{lootboxManagerLootboxId}":{"get":{"operationId":"getLootboxManagerLootbox","summary":"Get lootbox manager lootbox","description":"Returns a lootbox manager lootbox object for the provided lootboxManagerLootboxId.","tags":["Lootboxes"],"parameters":[{"$ref":"#/components/parameters/pathLootboxManagerId"},{"$ref":"#/components/parameters/pathLootboxManagerLootboxId"}],"responses":{"200":{"description":"Successfully retrieved lootbox manager lootbox.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LootboxManagerLootbox"}}}},"400":{"$ref":"#/components/responses/400"}}},"delete":{"operationId":"removeLootboxManagerLootbox","summary":"Remove lootbox manager lootbox","description":"Removes the provided lootbox by lootboxId from the provided lootbox manager. Removed lootboxes can no longer be used.","tags":["Lootboxes"],"parameters":[{"$ref":"#/components/parameters/pathLootboxManagerId"},{"$ref":"#/components/parameters/pathLootboxManagerLootboxId"},{"$ref":"#/components/parameters/headerAuthorizationGame"},{"$ref":"#/components/parameters/headerPasswordGame"}],"responses":{"200":{"description":"Successfully removed the provided lootbox from the provided lootbox manager. Returns a transaction object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionModel"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}}},"/v1/lootboxManagers/{lootboxManagerId}/lootboxes/{lootboxManagerLootboxId}/opens":{"post":{"operationId":"openLootboxManagerLootbox","summary":"Open lootbox manager lootbox","description":"Opens a lootbox manager lootbox. The required input item(s) are burned from the wallet or player wallet opening the lootbox. The given output item(s) are given to the wallet or player wallet opening the lootbox.","tags":["Shops"],"parameters":[{"$ref":"#/components/parameters/pathLootboxManagerId"},{"$ref":"#/components/parameters/pathLootboxManagerLootboxId"},{"$ref":"#/components/parameters/headerAuthorizationGameOrPlayer"},{"$ref":"#/components/parameters/headerPasswordGameOrPlayer"}],"responses":{"200":{"description":"Successfully opened provided lootbox manager lootbox. Returns an array of transaction objects. The first transaction object being for the lootbox opening, the second for claiming its contents.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TransactionModel"}}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}}},"/v1/players/auth":{"get":{"operationId":"authPlayer","summary":"Authenticate player","description":"Returns an existing player object containing access token, wallet, and other details for a game when provided a valid username and password login using Basic Auth.","tags":["Players"],"parameters":[{"$ref":"#/components/parameters/headerGameKey"}],"security":[{"basicAuth":[]}],"responses":{"200":{"description":"Succesfully authorized the request and retrieved a player object containing access token, wallet, and other details.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PlayerModel"},{"type":"object","properties":{"wallet":{"$ref":"#/components/schemas/WalletModel"}}}]}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}}},"/v1/players":{"get":{"operationId":"getPlayers","summary":"Get players","description":"Returns all players for the authenticated game as an array of player objects.","tags":["Players"],"parameters":[{"$ref":"#/components/parameters/headerAuthorizationGame"}],"responses":{"200":{"description":"Successfully retrieved players.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PublicPlayer"}}}}},"401":{"$ref":"#/components/responses/401"}}},"post":{"operationId":"createPlayer","summary":"Create player","description":"Create a new player for a game. Players are automatically associated with an internally managed wallet.\n\nPlayer access tokens can be used to directly interact with any MetaFab managed contracts, currencies, items collections, marketplaces and more. Player interactions are also gasless by default, completely removing all crypto friction for players to engage with your MetaFab supported games.","tags":["Players"],"parameters":[{"$ref":"#/components/parameters/headerGameKey"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"username":{"type":"string","description":"The players username, used to authenticate the player and if desired represent them in game. Usernames are unique. There cannot be 2 users with the same username created for a game."},"password":{"type":"string","description":"The password to authenticate as the player. Additionally, this password is used to encrypt/decrypt a player's primary wallet and must be provided anytime this player makes blockchain interactions through various endpoints.","format":"password","example":"aReallyStrongPassword123"}},"required":["username","password"]}}}},"responses":{"200":{"description":"Successfully created a new player. Returns a player object containing a wallet (used to interact with contracts, currencies, etc).","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PlayerModel"},{"type":"object","properties":{"wallet":{"$ref":"#/components/schemas/WalletModel"}}}]}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}}},"/v1/players/{playerId}":{"get":{"operationId":"getPlayer","summary":"Get player","description":"Returns a player object for the provided player id.","tags":["Players"],"parameters":[{"$ref":"#/components/parameters/pathPlayerId"}],"responses":{"200":{"description":"Successfully retrieved player.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PublicPlayer"}}}},"400":{"$ref":"#/components/responses/400"}}},"patch":{"operationId":"updatePlayer","summary":"Update player","description":"Update various fields specific to a player. Such as changing its password and resetting its access token.","tags":["Players"],"parameters":[{"$ref":"#/components/parameters/pathPlayerId"},{"$ref":"#/components/parameters/headerAuthorizationPlayer"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"currentPassword":{"type":"string","description":"The player's current password. Must be provided if setting `newPassword`.","format":"password"},"newPassword":{"type":"string","description":"A new password. The player's old password will no longer be valid.","format":"password"},"resetAccessToken":{"type":"boolean","description":"Revokes the player's previous access token and returns a new one if true."}}}}}},"responses":{"200":{"description":"Returns the updated player object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PlayerModel"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}}},"/v1/players/{playerId}/data":{"get":{"operationId":"getPlayerData","summary":"Get player data","description":"Returns the latest public and protected data as an object for the provided playerId.","tags":["Players"],"parameters":[{"$ref":"#/components/parameters/pathPlayerId"}],"responses":{"200":{"description":"Successfully retrieved player data. Returns latest player data object.","content":{"application/json":{"schema":{"type":"object","properties":{"protectedData":{"type":"object"},"publicData":{"type":"object"}}}}}},"400":{"$ref":"#/components/responses/400"}}},"post":{"operationId":"setPlayerData","summary":"Set player data","description":"Creates or updates public and/or protected data for the provided playerId. Data updates are performed using deep merging. This means that when you update any top level or nested properties specific to player public or protected data, you only need to include the properties you are making changes to. Any existing properties not included in request body arguments will be retained on the player data object.\n\nPlease note, When writing an array type for a player, arrays do not follow the deep merge approach. If you add or remove an item from an array, the entire array must be passed as an argument when updating the related property for player public or protected data.","tags":["Players"],"parameters":[{"$ref":"#/components/parameters/pathPlayerId"},{"$ref":"#/components/parameters/headerAuthorizationGameOrPlayer"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"protectedData":{"type":"object","description":"protectedData can only be set if `X-Authorization` includes credentials for the game the target player is a part of. Expects an arbitrary object allowed to contain any set of properties and nested data within those properties, including arrays.\n\nprotectedData is great for storing sensitive player data like tracking experience points, off-chain inventories, save states, and more - things that players shouldn't have the ability to directly change themselves."},"publicData":{"type":"object","description":"publicData can be set if `X-Authorization` includes credentials for the target player or game the player is a part of. Expects an arbitrary object allowed to contain any set of properties and nested data within those properties, including arrays.\n\npublicData is great for storing player preferences like in-game settings, non-sensitive data and more. Anything that a player should have the ability to directly change themselves without client or server verification can be stored in publicData."}}}}}},"responses":{"200":{"description":"Successfully set player data. Returns latest player data object.","content":{"application/json":{"schema":{"type":"object","properties":{"protectedData":{"type":"object"},"publicData":{"type":"object"}}}}}},"401":{"$ref":"#/components/responses/401"}}}},"/v1/shops":{"get":{"operationId":"getShops","summary":"Get shops","description":"Returns an array of active shops for the game associated with the provided `X-Game-Key`.","tags":["Shops"],"parameters":[{"$ref":"#/components/parameters/headerGameKey"}],"responses":{"200":{"description":"Successfully retrieved an array of shops for the game associated with the provided `X-Game-Key`","content":{"application/json":{"schema":{"type":"array","items":{"allOf":[{"$ref":"#/components/schemas/ShopModel"},{"type":"object","properties":{"contract":{"$ref":"#/components/schemas/ContractModel"}}}]}}}}},"400":{"$ref":"#/components/responses/400"}}},"post":{"operationId":"createShop","summary":"Create shop","description":"Creates a new game shop and deploys a shop contract on behalf of the authenticating game's primary wallet. The deployed shop contract allows you to create fixed price rates for players to buy specific items from any item collection or ERC1155 contract. Additionally, an shop allows you to create shop offers for some set of item(s) to another set of item(s) or any mix of currency. Shops completely supports gasless player transactions.","tags":["Shops"],"parameters":[{"$ref":"#/components/parameters/headerAuthorizationGame"},{"$ref":"#/components/parameters/headerPasswordGame"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"chain":{"type":"string","description":"The blockchain you want to deploy this shop on. Support for new blockchains are added over time.","example":"SELECT ONE","enum":["ETHEREUM","GOERLI","MATIC","MATICMUMBAI","ARBITRUM","ARBITRUMGOERLI"]}},"required":["chain"]}}}},"responses":{"200":{"description":"Successfully created a new shop and deployed its contract on the chain specified. Returns a shop object containing a contract property with the deployment transaction.","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/ShopModel"},{"type":"object","properties":{"contract":{"allOf":[{"$ref":"#/components/schemas/ContractModel"},{"type":"object","properties":{"transactions":{"type":"array","items":{"$ref":"#/components/schemas/TransactionModel"}}}}]}}}]}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}}},"/v1/shops/{shopId}/offers":{"get":{"operationId":"getShopOffers","summary":"Get shop offers","description":"Returns all shop offers as an array of shop offer objects.","tags":["Shops"],"parameters":[{"$ref":"#/components/parameters/pathShopId"}],"responses":{"200":{"description":"Successfully retrieved shop offers.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ShopOffer"}}}}},"400":{"$ref":"#/components/responses/400"}}},"post":{"operationId":"setShopOffer","summary":"Set shop offer","description":"Sets a new shop offer or updates an existing one for the provided id. Shop offers allow currency to item, item to currency or item to item exchanges.\n\nAll request fields besides `id` are optional. Any optional fields omitted will not be used for the offer. This allows you to create many different combinations of offers. For example, you can create an offer that may require 3 unique item ids of specified quantities from a given item collection and gives the user 1 new unique item id in exchange.\n\nAnother example, you may want to make an shop offer from one ERC20 token to another. This is also possible - simple set the input and output currency fields and leave the others blank.","tags":["Shops"],"parameters":[{"$ref":"#/components/parameters/pathShopId"},{"$ref":"#/components/parameters/headerAuthorizationGame"},{"$ref":"#/components/parameters/headerPasswordGame"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"integer","description":"A unique offer id to use for this offer for the shop. If an existing offer id is used, the current offer will be updated but the existing number of uses will be kept. If you want to reset the number of uses for an existing offer, first remove it using the remove offer endpoint, then set it.","example":1337},"inputCollectionAddress":{"type":"string","description":"A valid EVM based ERC1155 or MetaFab game items contract address that represents the collection for input items required by this offer. `inputCollectionAddress` or `inputCollectionId` can optionally be provided."},"inputCollectionId":{"type":"string","description":"A valid MetaFab collection id that represents the collection for input items required by this offer. `inputCollectionAddress` or `inputCollectionId` can optionally be provided."},"inputCollectionItemIds":{"type":"array","description":"An array of item ids from the provided input collection that are required to use this offer. Input items are transferred from the wallet to the shop contract upon using an offer.","items":{"type":"integer"}},"inputCollectionItemAmounts":{"type":"array","description":"An array of amounts for each item id from the provided input collection that are required to use this offer. Item amounts array indices are reflective of the amount required for a given item id at the same index.","items":{"type":"integer"}},"inputCurrencyAddress":{"type":"string","description":"A valid EVM based ERC20 or MetaFab game currency contract address that for the currency required by this offer."},"inputCurrencyId":{"type":"string","description":"A valid MetaFab currency id that represents the currency required by this offer."},"inputCurrencyAmount":{"type":"number","description":"The amount of currency required by this offer. If an inputCurrencyAmount is provided without in input currency address or id, the native chain currency is used as the required currency."},"outputCollectionAddress":{"type":"string","description":"A valid EVM based ERC1155 or MetaFab game items contract address that represents the collection for output items given by this offer. `outputCollectionAddress` or `outputCollectionId` can optionally be provided."},"outputCollectionId":{"type":"string","description":"A valid MetaFab collection id that represents the collection for output items given by this offer. `outputCollectionAddress` or `outputCollectionId` can optionally be provided."},"outputCollectionItemIds":{"type":"array","description":"An array of item ids from the provided output collection that are given by this offer. Output items are automatically minted if the shop contract has the `minter` role for the output collection contract. Otherwise, they are transferred from the item balance held by the shop contract.","items":{"type":"integer"}},"outputCollectionItemAmounts":{"type":"array","description":"An array of amounts for each item id from the provided output collection that are given by this offer. Item amounts array indices are reflective of the amount required for a given item id at the same index.","items":{"type":"integer"}},"outputCurrencyAddress":{"type":"string","description":"A valid EVM based ERC20 or MetaFab game currency contract address that for the currency given by this offer. The output currency amount is automatically minted if the shop contract has the `minter` role for the output currency contract. Otherwise, they are transferred from the currency balance held by the shop contract."},"outputCurrencyId":{"type":"string","description":"A valid MetaFab currency id for the currency given by this offer."},"outputCurrencyAmount":{"type":"number","description":"The amount of currency given by this offer. If an outputCurrencyAmount is provided without an output currency address or id, the native chain currency is used as the given currency."},"maxUses":{"type":"integer","description":"The maximum number of times this offer can be used in total. maxUses is collective across all uses of the offer. If 5 unique players use an offer, that counts as 5 offer uses. Exclude this or use 0 to allow unlimited uses."}},"required":["id"]}}}},"responses":{"200":{"description":"Successfully created or updated an shop offer for the provided offer id. Returns a transaction object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionModel"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}}},"/v1/shops/{shopId}/items/{shopOfferId}":{"get":{"operationId":"getShopOffer","summary":"Get shop offer","description":"Returns a shop offer object for the provided shopOfferId.","tags":["Shops"],"parameters":[{"$ref":"#/components/parameters/pathShopId"},{"$ref":"#/components/parameters/pathShopOfferId"}],"responses":{"200":{"description":"Successfully retrieved shop offer.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ShopOffer"}}}},"400":{"$ref":"#/components/responses/400"}}}},"/v1/shops/{shopId}/offers/{shopOfferId}":{"delete":{"operationId":"removeShopOffer","summary":"Remove shop offer","description":"Removes the provided offer by offerId from the provided shop. Removed offers can no longer be used.","tags":["Shops"],"parameters":[{"$ref":"#/components/parameters/pathShopId"},{"$ref":"#/components/parameters/pathShopOfferId"},{"$ref":"#/components/parameters/headerAuthorizationGame"},{"$ref":"#/components/parameters/headerPasswordGame"}],"responses":{"200":{"description":"Successfully removed the provided offer from the provided shop. Returns a transaction object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionModel"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}}},"/v1/shops/{shopId}/offers/{shopOfferId}/uses":{"post":{"operationId":"useShopOffer","summary":"Use shop offer","description":"Uses an shop offer. The required (input) item(s) and/or currency are removed from the wallet or player wallet using the offer. The given (output) item(s) and/or currency are given to the wallet or player wallet using the offer.","tags":["Shops"],"parameters":[{"$ref":"#/components/parameters/pathShopId"},{"$ref":"#/components/parameters/pathShopOfferId"},{"$ref":"#/components/parameters/headerAuthorizationGameOrPlayer"},{"$ref":"#/components/parameters/headerPasswordGameOrPlayer"}],"responses":{"200":{"description":"Successfully used provided shop offer. Returns a transaction object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionModel"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}}},"/v1/shops/{shopId}/withdrawals":{"post":{"operationId":"withdrawFromShop","summary":"Withdraw from shop","description":"Withdraws native token, currency or items from a shop. Whenever an shop offer has input requirements, the native tokens, currencies or items for the requirements of that offer are deposited into the shop contract when the offer is used. These can be withdrawn to any other address.","tags":["Shops"],"parameters":[{"$ref":"#/components/parameters/pathShopId"},{"$ref":"#/components/parameters/headerAuthorizationGame"},{"$ref":"#/components/parameters/headerPasswordGame"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"address":{"type":"string","description":"A valid EVM based address to withdraw to. For example, `0x39cb70F972E0EE920088AeF97Dbe5c6251a9c25D`."},"walletId":{"type":"string","description":"Any wallet id within the MetaFab ecosystem to withdraw to."},"currencyAddress":{"type":"string","description":"The address of the currency (ERC20) token to withdraw from the shop. If no currencyAddress or currencyId, and no collectionAddress or collectionId are provided, the native token held by the shop will be withdrawn."},"currencyId":{"type":"string","description":"A valid MetaFab currency id that represents the currency token to withdraw from the shop. `currencyAddress` or `currencyId` can be provided when withdrawing currency."},"collectionAddress":{"type":"string","description":"The address of the collection (ERC1155) for the items to withdraw from the shop. If no currencyAddress and no collectionAddress is provided, the native token held by the shop will be withdrawn."},"collectionId":{"type":"string","description":"A valid MetaFab collection id that represents the collection for the items to withdraw from the shop. `collectionAddress` or `collectionId` can be provided when withdrawing items."},"itemIds":{"type":"array","description":"The specific itemIds of the provided collection to withdraw from the shop.","items":{"type":"integer"}}}}}}},"responses":{"200":{"description":"Successfully performed a withdrawal to the provided wallet address or wallet address of the provided walletId. Returns a transaction object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionModel"}}}},"400":{"$ref":"#/components/responses/400"},"401":{"$ref":"#/components/responses/401"}}}},"/v1/transactions/{transactionId}":{"get":{"operationId":"getTransaction","summary":"Get transaction","description":"Returns an executed transaction object for the provided transactionId. Transactions are created by MetaFab when interacting with contracts, currencies, items and other MetaFab resources.","tags":["Transactions"],"parameters":[{"$ref":"#/components/parameters/pathTransactionId"}],"responses":{"200":{"description":"Successfully retrieved a transaction object for the provided transactionId.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionModel"}}}},"400":{"$ref":"#/components/responses/400"}}}},"/v1/wallets/{walletId}/balances":{"get":{"operationId":"getWalletBalances","summary":"Get wallet balances","description":"Returns the current native token balance for all chains supported by MetaFab for the provided walletId. This includes balances like Eth, Matic and other native tokens from chains MetaFab supports.","tags":["Wallets"],"parameters":[{"$ref":"#/components/parameters/pathWalletId"}],"responses":{"200":{"description":"Successfully retrieved native token balances of the provided walletId's address for each chain supported by MetaFab.","content":{"application/json":{"schema":{"type":"object","additionalProperties":{"type":"number"}}}}},"400":{"$ref":"#/components/responses/400"}}}},"/v1/wallets/{walletId}/transactions":{"get":{"operationId":"getWalletTransactions","summary":"Get wallet transactions","description":"Returns an array of MetaFab initiated transactions performed by the provided walletId. Transactions returned are ordered chronologically from newest to oldest.","tags":["Wallets"],"parameters":[{"$ref":"#/components/parameters/pathWalletId"}],"responses":{"200":{"description":"Successfully retrieved an array of transactions performed by the provided walletId.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TransactionModel"}}}}},"400":{"$ref":"#/components/responses/400"}}}}}}